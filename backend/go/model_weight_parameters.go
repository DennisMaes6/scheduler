/*
 * Scheduler API
 *
 * API for getting generated schedules. Also used for getting and setting model parameters and instance data.
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// WeightParameters - Holds the shift type specific model parameters.
type WeightParameters struct {

	// The weight of coverage in the fitness function of schedule
	Coverage float32 `json:"coverage"`

	// The weight of balance in the fitness function of schedule
	Balance float32 `json:"balance"`

	// The weight of fairness in the fitness function of schedule
	Fairness float32 `json:"fairness"`
}

// AssertWeightParametersRequired checks if the required fields are not zero-ed
func AssertWeightParametersRequired(obj WeightParameters) error {
	elements := map[string]interface{}{
		"coverage": obj.Coverage,
		"balance": obj.Balance,
		"fairness": obj.Fairness,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseWeightParametersRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of WeightParameters (e.g. [][]WeightParameters), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseWeightParametersRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aWeightParameters, ok := obj.(WeightParameters)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertWeightParametersRequired(aWeightParameters)
	})
}
