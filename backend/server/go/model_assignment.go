/*
 * Scheduler API
 *
 * API for getting generated schedules. Also used for getting and setting model parameters and instance data.
 *
 * API version: 0.1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// Assignment - Represents a single shift assignment.
type Assignment struct {

	// The day of the scheduling period for which this is an assignment.
	DayNb int32 `json:"day_nb"`

	ShiftType ShiftType `json:"shift_type"`

	// Indicates whether or not this assignment is part of a streak of free days as long as the min_balance score for this schedule.
	PartOfMinBalance bool `json:"part_of_min_balance"`
}

// AssertAssignmentRequired checks if the required fields are not zero-ed
func AssertAssignmentRequired(obj Assignment) error {
	elements := map[string]interface{}{
		"day_nb": obj.DayNb,
		"shift_type": obj.ShiftType,
		"part_of_min_balance": obj.PartOfMinBalance,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseAssignmentRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Assignment (e.g. [][]Assignment), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseAssignmentRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAssignment, ok := obj.(Assignment)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertAssignmentRequired(aAssignment)
	})
}
