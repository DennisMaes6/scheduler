/*
 * Scheduler API
 *
 * Basic API for retrieving schedules, based on a ScheduleInput object.
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"fmt"
	"net/http"

	"github.com/jorensjongers/scheduler/backend/model"
	"github.com/jorensjongers/scheduler/backend/schedule_generator"
)

// DefaultApiService is a service that implents the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
	scheduleGenerator schedule_generator.ScheduleGenerator
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() *DefaultApiService {
	return &DefaultApiService{}
}

// ScheduleGet - Returns a generated schedule.
func (s *DefaultApiService) ScheduleGet(ctx context.Context) (ImplResponse, error) {

	var test model.Schedule = s.scheduleGenerator.GenerateSchedule()
	fmt.Print(test.NbDays)
	//return Response(200, Schedule{}), nil
	return Response(http.StatusNotImplemented, nil), errors.New("SetModelParamsPost method not implemented")
}

// SetModelParamsPost - Sets the model paramters in the backend.
func (s *DefaultApiService) SetModelParamsPost(ctx context.Context, modelParameters model.ModelParameters) (ImplResponse, error) {
	// TODO - update SetModelParamsPost with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("SetModelParamsPost method not implemented")
}
