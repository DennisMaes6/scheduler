/*
Scheduler API

API for getting generated schedules. Also used for getting and setting model parameters and instance data.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IndividualSchedule Represents the work schedule of an individual assistant.
type IndividualSchedule struct {
	// The identification number of the assistant for which this is an individual schedule.
	AssistantId int32 `json:"assistant_id"`
	// The workload of this inidividual schedule. Used when calculating the fairness score.
	Workload float32 `json:"workload"`
	// Contains all the individual assignments of this individual schedule.
	Assignments []Assignment `json:"assignments"`
}

// NewIndividualSchedule instantiates a new IndividualSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndividualSchedule(assistantId int32, workload float32, assignments []Assignment) *IndividualSchedule {
	this := IndividualSchedule{}
	this.AssistantId = assistantId
	this.Workload = workload
	this.Assignments = assignments
	return &this
}

// NewIndividualScheduleWithDefaults instantiates a new IndividualSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndividualScheduleWithDefaults() *IndividualSchedule {
	this := IndividualSchedule{}
	return &this
}

// GetAssistantId returns the AssistantId field value
func (o *IndividualSchedule) GetAssistantId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AssistantId
}

// GetAssistantIdOk returns a tuple with the AssistantId field value
// and a boolean to check if the value has been set.
func (o *IndividualSchedule) GetAssistantIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AssistantId, true
}

// SetAssistantId sets field value
func (o *IndividualSchedule) SetAssistantId(v int32) {
	o.AssistantId = v
}

// GetWorkload returns the Workload field value
func (o *IndividualSchedule) GetWorkload() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Workload
}

// GetWorkloadOk returns a tuple with the Workload field value
// and a boolean to check if the value has been set.
func (o *IndividualSchedule) GetWorkloadOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Workload, true
}

// SetWorkload sets field value
func (o *IndividualSchedule) SetWorkload(v float32) {
	o.Workload = v
}

// GetAssignments returns the Assignments field value
func (o *IndividualSchedule) GetAssignments() []Assignment {
	if o == nil {
		var ret []Assignment
		return ret
	}

	return o.Assignments
}

// GetAssignmentsOk returns a tuple with the Assignments field value
// and a boolean to check if the value has been set.
func (o *IndividualSchedule) GetAssignmentsOk() (*[]Assignment, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Assignments, true
}

// SetAssignments sets field value
func (o *IndividualSchedule) SetAssignments(v []Assignment) {
	o.Assignments = v
}

func (o IndividualSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assistant_id"] = o.AssistantId
	}
	if true {
		toSerialize["workload"] = o.Workload
	}
	if true {
		toSerialize["assignments"] = o.Assignments
	}
	return json.Marshal(toSerialize)
}

type NullableIndividualSchedule struct {
	value *IndividualSchedule
	isSet bool
}

func (v NullableIndividualSchedule) Get() *IndividualSchedule {
	return v.value
}

func (v *NullableIndividualSchedule) Set(val *IndividualSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableIndividualSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableIndividualSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndividualSchedule(val *IndividualSchedule) *NullableIndividualSchedule {
	return &NullableIndividualSchedule{value: val, isSet: true}
}

func (v NullableIndividualSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndividualSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


