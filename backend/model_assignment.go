/*
Scheduler API

API for getting generated schedules. Also used for getting and setting model parameters and instance data.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Assignment Represents a single shift assignment.
type Assignment struct {
	// The day of the scheduling period for which this is an assignment.
	DayNb int32 `json:"day_nb"`
	ShiftType ShiftType `json:"shift_type"`
	// Indicates whether or not this assignment is part of a streak of free days as long as the min_balance score for this schedule.
	PartOfMinBalance bool `json:"part_of_min_balance"`
}

// NewAssignment instantiates a new Assignment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignment(dayNb int32, shiftType ShiftType, partOfMinBalance bool) *Assignment {
	this := Assignment{}
	this.DayNb = dayNb
	this.ShiftType = shiftType
	this.PartOfMinBalance = partOfMinBalance
	return &this
}

// NewAssignmentWithDefaults instantiates a new Assignment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignmentWithDefaults() *Assignment {
	this := Assignment{}
	return &this
}

// GetDayNb returns the DayNb field value
func (o *Assignment) GetDayNb() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DayNb
}

// GetDayNbOk returns a tuple with the DayNb field value
// and a boolean to check if the value has been set.
func (o *Assignment) GetDayNbOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DayNb, true
}

// SetDayNb sets field value
func (o *Assignment) SetDayNb(v int32) {
	o.DayNb = v
}

// GetShiftType returns the ShiftType field value
func (o *Assignment) GetShiftType() ShiftType {
	if o == nil {
		var ret ShiftType
		return ret
	}

	return o.ShiftType
}

// GetShiftTypeOk returns a tuple with the ShiftType field value
// and a boolean to check if the value has been set.
func (o *Assignment) GetShiftTypeOk() (*ShiftType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ShiftType, true
}

// SetShiftType sets field value
func (o *Assignment) SetShiftType(v ShiftType) {
	o.ShiftType = v
}

// GetPartOfMinBalance returns the PartOfMinBalance field value
func (o *Assignment) GetPartOfMinBalance() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.PartOfMinBalance
}

// GetPartOfMinBalanceOk returns a tuple with the PartOfMinBalance field value
// and a boolean to check if the value has been set.
func (o *Assignment) GetPartOfMinBalanceOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PartOfMinBalance, true
}

// SetPartOfMinBalance sets field value
func (o *Assignment) SetPartOfMinBalance(v bool) {
	o.PartOfMinBalance = v
}

func (o Assignment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["day_nb"] = o.DayNb
	}
	if true {
		toSerialize["shift_type"] = o.ShiftType
	}
	if true {
		toSerialize["part_of_min_balance"] = o.PartOfMinBalance
	}
	return json.Marshal(toSerialize)
}

type NullableAssignment struct {
	value *Assignment
	isSet bool
}

func (v NullableAssignment) Get() *Assignment {
	return v.value
}

func (v *NullableAssignment) Set(val *Assignment) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignment) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignment(val *Assignment) *NullableAssignment {
	return &NullableAssignment{value: val, isSet: true}
}

func (v NullableAssignment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


